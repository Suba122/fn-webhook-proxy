plugins {
    id 'java'
    id 'jacoco'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
}
configurations {
    invoker
}
dependencies {
    compileOnly 'com.google.cloud.functions:functions-framework-api:1.1.0'
    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.3.0'

    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'org.mockito:mockito-core:4.2.0'
    testImplementation platform('org.junit:junit-bom:5.9.2')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation "com.github.tomakehurst:wiremock-jre8:2.35.0"

    implementation 'com.google.cloud.functions.invoker:java-function-invoker:1.2.0'
    implementation 'com.google.oauth-client:google-oauth-client:1.34.1'
    implementation 'com.google.api-client:google-api-client-gson:2.2.0'
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.43.1'
    implementation 'com.google.api-client:google-api-client-java6:2.1.4'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
}


tasks.register("runFunction", JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
            '--target', project.findProperty('run.functionTarget') ?: '',
            '--port', project.findProperty('run.port') ?: 8080
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}